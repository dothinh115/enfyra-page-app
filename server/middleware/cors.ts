import { defineEventHandler } from 'h3'
import { useRuntimeConfig } from '#imports'
export default defineEventHandler(async (event) => {
  // Ch·ªâ √°p d·ª•ng cho API routes
  if (!event.node.req.url?.startsWith('/api/') && !event.node.req.url?.startsWith('/enfyra/api/')) {
    return
  }

  // L·∫•y th√¥ng tin v·ªÅ origin v√† referer t·ª´ request headers
  const origin = event.node.req.headers.origin
  const referer = event.node.req.headers.referer
  
  // Ch·ªâ cho ph√©p domain hi·ªán t·∫°i
  const config = useRuntimeConfig()
  const currentDomain = config.public.baseUrl
  
  // Ki·ªÉm tra CORS - ch·ªâ cho ph√©p domain hi·ªán t·∫°i
  let isAllowed = false

  // Ki·ªÉm tra origin
  if (origin) {
    isAllowed = origin === currentDomain
  }
  // Ki·ªÉm tra referer n·∫øu kh√¥ng c√≥ origin
  else if (referer) {
    isAllowed = referer.startsWith(currentDomain)
  }
  // N·∫øu kh√¥ng c√≥ c·∫£ origin v√† referer, c√≥ th·ªÉ l√† request n·ªôi b·ªô (cho ph√©p)
  else {
    isAllowed = true
  }

  // N·∫øu request kh√¥ng ƒë∆∞·ª£c ph√©p, ch·∫∑n ngay l·∫≠p t·ª©c
  if (!isAllowed) {
    console.warn('üö´ CORS BLOCKED: Request from unauthorized origin:', {
      origin,
      referer,
      url: event.node.req.url,
      method: event.node.req.method
    })
    
    // Tr·∫£ v·ªÅ l·ªói 403 Forbidden
    event.node.res.statusCode = 403
    event.node.res.setHeader('Content-Type', 'application/json')
    event.node.res.end(JSON.stringify({
      error: 'Forbidden',
      message: 'Access denied: Request not allowed from this domain'
    }))
    return
  }

  // Set CORS headers cho request ƒë∆∞·ª£c ph√©p
  event.node.res.setHeader('Access-Control-Allow-Origin', currentDomain)
  event.node.res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, PATCH, OPTIONS')
  event.node.res.setHeader('Access-Control-Allow-Headers', 'Content-Type, Authorization, X-Requested-With')
  event.node.res.setHeader('Access-Control-Allow-Credentials', 'true')

  // X·ª≠ l√Ω preflight request
  if (event.node.req.method === 'OPTIONS') {
    event.node.res.statusCode = 200
    event.node.res.end()
    return
  }

  console.log('‚úÖ CORS ALLOWED: Request from authorized origin:', origin || referer || 'internal')
})
